#+TITLE: vizRNAseq R package
#+AUTHOR: ZGUANG@LZU
#+OPTIONS: toc:nil ^:{} html-style:nil html-scripts:nil
#+STARTUP: showall

* Introduction
vizRNAseq是一个R软件包，主要作用是简化RNAseq数据分析过程，并提供高质量的图形。本人并不专门开发软件，软件包仅包含本实验室数据处理流程中需要的功能，请多包涵。
软件包当前提供以下类别的R函数：
+ 数据前期处理（仅支持Trinity-RSEM输出数据）
  + 表达量计算（均值、sd、P值）
  + DEG差异表达基因获取
+ 基因列表分析
  + KEGG代谢通路富集分析
  + GO基因本体富集分析
+ 表达量绘图
  + Venn：基于VennDiagram软件包
  + 热图：基于pheatmap软件包
+ 基因注释数据
  + 拟南芥功能注释：ATHGENEANNO
  + 拟南芥GO注释：ATHGENEGO
  + GOFULL
  + KEGGFULL

* Installation
The package can be install with *devtools* from *github* by execute the following commands in R:

#+begin_SRC R :exports code :tangle yes :eval never
  ## install.packages('devtools')
  require('devtools')
  install_github('zgzhao/vizRNAseq')
#+end_SRC

* 数据前期处理
如果只使用本软件包的基因列表分析功能，此步骤可以略过

- R函数：`RSEM_pipeline`
  - 必需数据：当前仅支持使用Trinity软件包的计算工具导出的数据
    - SAMPLENAME.gene.counts.matrix 或 SAMPLENAME.isoform.count.matrix
  - 可选数据
    - 基因注释：拟南芥可以直接使用软件包中包含的ATHGENEANNO表格

#+begin_SRC R :exports code :tangle yes :eval never
  library(vizRNAseq)
  smps <- read_csv('sample.paired.csv')
  RSEM_pipeline(data_dir = "/path/to/RSEM_output",
                treatments = smps$treatment,
                controls = smps$control,
                output_dir = "data",
                annotations = ATHGENEANNO)
#+end_SRC

`sample.paired.csv` 文件包含`control`和`treatment`列，用于设置需要两两比较的样本，当然也可以在参数中直接输入。

输出系列文件：
- all.exprs.mean.matrix.csv
- all.exprs.sd.matrix.csv
- all.pairwise.p.matrix.csv
- compare.XXXX.csv（数量根据比较数而定）
- DEG.XXXX.csv

* 基因列表分析
** KEGG分析
*** 基本分析
- 使用`KEGG_gene_map`函数获取指定物种的`基因`-`KEGG`映射（需要联网下载KEGG数据）：
#+begin_SRC R :exports code :tangle yes :eval never
  komap <- KEGG_gene_map(org='ath')
#+end_SRC
- 其他数据
  - DEG列表：gids
  - 参考基因列表：refs
#+begin_SRC R :exports code :tangle yes :eval never
  res <- statKEGG(gids, komap, refGenes = refs) %>%
      filter(n > 1)
#+end_SRC
最后一步`filter(n > 1)`筛选富集基因数超过1的通路，可根据需要修改

*** 网络群组
#+begin_example
nxx <- graphTerms(res, percent = T)
gxx <- membership(nxx$community)
aaa <- tibble(ID=V(nxx$graph)$name) %>%
    left_join(res %>% select(ID, n, desc), by='ID') %>%
    mutate(desc=sub("^.+;", '', desc))
plot(nxx$community, nxx$graph, vertex.label=aaa$desc, vertex.label.cex=1.5)
#+end_example

*** 数据整理和输出
#+begin_example
rex <- res %>% 
    left_join(tibble(ID=names(gxx), group=as.integer(gxx)), by='ID') %>%
    select(group, everything()) %>% 
    arrange(group, level, p.adj)

rex %>% select(-where(is.list)) %>% 
    write.csv('results.KEGG.csv', row.names=F)
#+end_example
** GO分析
- 使用`statGO`函数
- 分析步骤和KEGG分析类似，需要准备gomap表格，可参考ATHGENEGO变量格式：

#+begin_SRC R :exports code :tangle yes :eval never
  str(ATHGENEGO)
  statGO(gids, gomap, refGenes = refs)
#+end_SRC

* 数据可视化
请参考函数使用说明
- vheatmap：表达量热图
- plotVenn：韦恩图
